export interface IAuthFields {
  userName?: string
  password?: string

  /** Открытый ключ, который можно использовать для регистрации заказа.
   * Если для аутентификации при регистрации заказа используются логин и пароль, параметр token передавать не нужно */
  token?: string
}

export interface IRegisterOrder extends IAuthFields {
  /** Номер (идентификатор) заказа в системе магазина, уникален для каждого магазина в пределах системы */
  orderNumber: string

  /** Сумма платежа в копейках (или центах) */
  amount: number

  /**Код валюты платежа ISO 4217. Если не указано, то используется значение по умолчанию. */
  currency?: string

  /** Адрес, на который требуется перенаправить пользователя в случае успешной оплаты. Адрес должен быть указан
   * полностью, включая используемый протокол (например, https://test.ru вместо test.ru). */
  returnUrl: string

  /** Адрес, на который требуется перенаправить пользователя в случае неуспешной оплаты.
   * Адрес должен быть указан полностью, включая используемый протокол (например, https://test.ru вместо test.ru).
   * В противном случае пользователь будет перенаправлен по адресу следующего вида: http://<адрес_платёжного_шлюза>/<адрес_продавца>.
   * */
  failUrl?: string

  /** Описание заказа в свободной форме. (Чтобы получить возможность отправлять это поле в процессинг, обратитесь в техническую поддержку.) */
  description?: string

  /** Язык в кодировке ISO 639-1. Если не указан, будет использован язык, указанный в настройках магазина как язык по умолчанию. */
  language?: string

  /** По значению данного параметра определяется, какие страницы платёжного интерфейса должны загружаться для клиента */
  pageView?: 'DESKTOP' | 'MOBILE' | string

  /** Номер (идентификатор) клиента в системе магазина. Используется для реализации функционала связок. Может присутствовать, если магазину разрешено создание связи */
  clientId?: string

  /** Чтобы зарегистрировать заказ от имени дочернего мерчанта, укажите его логин в этом параметре. */
  merchantLogin?: string

  /** Блок для передачи дополнительных параметров мерчанта. */
  jsonParams?: {
    email?: string
    phone?: string
  }

  /** Продолжительность жизни заказа в секундах.
   * В случае если параметр не задан, будет использовано значение, указанное в настройках мерчанта или время по умолчанию (1200 секунд = 20 минут).
   * Если в запросе присутствует параметр expirationDate, то значение параметра sessionTimeoutSecs не учитывается. */
  sessionTimeoutSecs?: number

  /**Дата и время окончания жизни заказа. Формат: yyyy-MM-dd'T'HH:mm:ss.
   * Если этот параметр не передаётся в запросе, то для определения времени окончания жизни заказа используется sessionTimeoutSecs . */
  expirationDate?: string

  /**Идентификатор связки, созданной ранее. Может использоваться, только если у магазина есть разрешение на работу
   * со связками. Если этот параметр передаётся в данном запросе, то это означает:
   * 1. Данный заказ может быть оплачен только с помощью связки;
   * 2. Плательщик будет перенаправлен на платёжную страницу, где требуется только ввод CVC. */
  bindingId?: string

  /** Контейнер для параметра feature, в котором можно указать следующие значения.
   * AUTO_PAYMENT - Если запрос на регистрацию заказа инициирует проведение автоплатежей.
   * FORCE_TDS - Принудительное проведение платежа с использованием 3-D Secure. Если карта не поддерживает 3-D Secure, транзакция не пройдёт.
   * FORCE_SSL - Принудительное проведение платежа через SSL (без использования 3-D Secure).
   * FORCE_FULL_TDS - После проведения аутентификации с помощью 3-D Secure статус PaRes должен быть только Y, что гарантирует успешную аутентификацию пользователя. В противном случае транзакция не пройдёт. */
  features?: string

  /** Электронная почта покупателя. */
  email?: string

  /** Номер телефона покупателя в следующем формате: +375333333333. */
  phone?: string
}

export type IResponseError = {
  /**Код ошибки */
  errorCode?: string

  /** Описание ошибки на языке, переданном в параметре language в запросе. */
  errorMessage?: string
}

export type IRegisterOrderResponse = {
  /** Номер заказа в платежной системе. Уникален в пределах системы.
   * Отсутствует, если регистрация заказа на удалась по причине ошибки, детализированной в errorCode. */
  orderId?: string

  /** URL платежной формы, на который надо перенаправить браузер клиента.
   * Не возвращается, если регистрация заказа не удалась по причине ошибки, детализированной в errorCode. */
  formUrl?: string
}

export type TResponses = IRegisterOrderResponse | IResponseError
export type TData = IRegisterOrder
